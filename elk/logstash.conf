# logstash config

input {
  file {
    path => [ "/var/log/*.log", "/var/log/messages", "/var/log/syslog" ]
    type => "syslog"
  }
  file {
    path => "/var/apache/logs/custom_log"
    type => "apache_access_log"
  }
  file {
    path => "/var/apache/logs/error_log"
    type => "apache_error_log"
  }
}

filter {
  if [type] == "apache_access_log" {
    mutate { replace => { "type" => "apache-access" } }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  }
  if [type] == "apache_error_log" {
    mutate { replace => { "type" => "apache-error" } }
    grok {
      patterns_dir => [ "/Users/username/logstash/patterns.d" ]
      match => [ "message", '%{APACHE_ERROR_LOG}' ]
      overwrite => [ "message" ]
    }
    if !("_grokparsefailure" in [tags]) {
      date {
        match => [ "timestamp", "EEE MMM dd HH:mm:ss.SSSSSS yyyy" ]
      }
    }
  }
  if [type] == "syslog" {
    grok {
      match => [ "message", "%{SYSLOGBASE2}" ]
    }
  }
}

output {
  elasticsearch { host => localhost }
  stdout { codec => rubydebug }
}

# eof
